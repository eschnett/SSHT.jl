var documenterSearchIndex = {"docs":
[{"location":"#SSHT.jl:-Fast-and-exact-spin-spherical-harmonic-transforms","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.jl: Fast and exact spin spherical harmonic transforms","text":"","category":"section"},{"location":"","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.jl: Fast and exact spin spherical harmonic transforms","text":"This package is a Julia wrapper for the SSHT library. It calculates spin spherical harmonic transforms.","category":"page"},{"location":"","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.jl: Fast and exact spin spherical harmonic transforms","text":"Most functions come in two versions, one that mutates its arguments and one that allocates its output.","category":"page"},{"location":"#Spin-weighted-Spherical-Harmonic-transforms","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"Spin-weighted Spherical Harmonic transforms","text":"","category":"section"},{"location":"","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.jl: Fast and exact spin spherical harmonic transforms","text":"The functions with dh in their names use the Driscoll & Healy quadrature points. With L = lmax+1 modes there are nphi * ntheta quadrature points on the sphere, with nphi = 2L-1 and ntheta = 2L. The points are equispaced in the angles theta (latitude) and phi (longitude), and they straddle (avoid) the poles.","category":"page"},{"location":"","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.jl: Fast and exact spin spherical harmonic transforms","text":"SSHT.core_dh_inverse_sov!\nSSHT.core_dh_inverse_sov\nSSHT.core_dh_inverse_sov_real!\nSSHT.core_dh_inverse_sov_real\nSSHT.core_dh_forward_sov!\nSSHT.core_dh_forward_sov\nSSHT.core_dh_forward_sov_real!\nSSHT.core_dh_forward_sov_real","category":"page"},{"location":"#SSHT.core_dh_inverse_sov!","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.core_dh_inverse_sov!","text":"SSHT.core_dh_inverse_sov!(f::AbstractArray{Complex{Float64},2},\n                          flm::AbstractVector{Complex{Float64}},\n                          L::Integer,\n                          spin::Integer,\n                          verbosity::Integer=0)\n\nEvaluate spin-weighted spherical harmonic coefficients flm with spin-weight spin. L = lmax+1 is the number of modes in flm.\n\nThe arrays flm and f must have the following sizes:\n\nnphi = SSHT.sampling_dh_nphi(L)\nntheta = SSHT.sampling_dh_ntheta(L)\nlength(flm) == L^2\nsize(f) == (nphi, ntheta)\n\nSee the SSHT reference for details.\n\nSee also: SSHT.core_dh_inverse_sov, SSHT.core_dh_inverse_sov_real!, SSHT.core_dh_forward_sov!.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.core_dh_inverse_sov","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.core_dh_inverse_sov","text":"f = SSHT.core_dh_inverse_sov(flm::AbstractVector{Complex{Float64}},\n                             L::Integer,\n                             spin::Integer,\n                             verbosity::Integer=0)\nf::Array{Complex{Float64},2}\n\nEvaluate spin-weighted spherical harmonic coefficients flm with spin-weight spin. L = lmax+1 is the number of modes in flm.\n\nThe array flm must have the length L^2. The result f will have the following size:\n\nnphi = SSHT.sampling_dh_nphi(L)\nntheta = SSHT.sampling_dh_ntheta(L)\nsize(f) == (nphi, ntheta)\n\nSee the SSHT reference for details.\n\nSee also: SSHT.core_dh_inverse_sov!, SSHT.core_dh_inverse_sov_real, SSHT.core_dh_forward_sov.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.core_dh_inverse_sov_real!","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.core_dh_inverse_sov_real!","text":"SSHT.core_dh_inverse_sov_real!(f::AbstractArray{Float64,2},\n                               flm::AbstractVector{Complex{Float64}},\n                               L::Integer,\n                               spin::Integer,\n                               verbosity::Integer=0)\n\nEvaluate spin-weighted spherical harmonic coefficients flm with spin-weight spin. L = lmax+1 is the number of modes in flm. The result f is real-valued.\n\nThe arrays flm and f must have the following sizes:\n\nnphi = SSHT.sampling_dh_nphi(L)\nntheta = SSHT.sampling_dh_ntheta(L)\nlength(flm) == L^2\nsize(f) == (nphi, ntheta)\n\nSee the SSHT reference for details.\n\nSee also: SSHT.core_dh_inverse_sov_real, SSHT.core_dh_inverse_sov!, SSHT.core_dh_forward_sov_real!.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.core_dh_inverse_sov_real","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.core_dh_inverse_sov_real","text":"f = SSHT.core_dh_inverse_sov_real(flm::AbstractVector{Complex{Float64}},\n                                  L::Integer,\n                                  spin::Integer,\n                                  verbosity::Integer=0)\nf::Array{Float64,2}\n\nEvaluate spin-weighted spherical harmonic coefficients flm with spin-weight spin. L = lmax+1 is the number of modes in flm. The result f is real-valued.\n\nThe array flm must have the length L^2. The result f will have the following size:\n\nnphi = SSHT.sampling_dh_nphi(L)\nntheta = SSHT.sampling_dh_ntheta(L)\nsize(f) == (nphi, ntheta)\n\nSee the SSHT reference for details.\n\nSee also: SSHT.core_dh_inverse_sov_real!, SSHT.core_dh_inverse_sov, SSHT.core_dh_forward_sov_real.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.core_dh_forward_sov!","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.core_dh_forward_sov!","text":"SSHT.core_dh_forward_sov!(flm::AbstractVector{Complex{Float64}},\n                          f::AbstractArray{Complex{Float64},2},\n                          L::Integer,\n                          spin::Integer,\n                          verbosity::Integer=0)\n\nCalculate spin-weighted spherical harmonic coefficients with spin-weight spin flm from grid point values f. L = lmax+1 is the number of modes in flm.\n\nThe arrays flm and f must have the following sizes:\n\nnphi = SSHT.sampling_dh_nphi(L)\nntheta = SSHT.sampling_dh_ntheta(L)\nlength(flm) == L^2\nsize(f) == (nphi, ntheta)\n\nUse SSTH.sampling_elm2ind to access individual modes in the flm array.\n\nSee the SSHT reference for details.\n\nSee also: SSHT.core_dh_forward_sov, SSHT.core_dh_forward_sov_real!, SSHT.core_dh_inverse_sov!.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.core_dh_forward_sov","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.core_dh_forward_sov","text":"flm = SSHT.core_dh_forward_sov(fl:AbstractVector{Complex{Float64}},\n                               L::Integer,\n                               spin::Integer,\n                               verbosity::Integer=0)\nflm::Vector{Complex{Float64}}\n\nCalculate spin-weighted spherical harmonic coefficients flm with spin-weight spin from grid point values f. L = lmax+1 is the number of modes in flm.\n\nThe array flm will have length L^2. The input f must have the following size:\n\nnphi = SSHT.sampling_dh_nphi(L)\nntheta = SSHT.sampling_dh_ntheta(L)\nsize(f) == (nphi, ntheta)\n\nUse SSTH.sampling_elm2ind to access individual modes in the flm array.\n\nSee the SSHT reference for details.\n\nSee also: SSHT.core_dh_forward_sov!, SSHT.core_dh_forward_sov_real, SSHT.core_dh_inverse_sov.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.core_dh_forward_sov_real!","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.core_dh_forward_sov_real!","text":"SSHT.core_dh_forward_sov_real!(flm::AbstractVector{Complex{Float64}},\n                               f::AbstractArray{Float64,2},\n                               L::Integer,\n                               spin::Integer,\n                               verbosity::Integer=0)\n\nCalculate spin-weighted spherical harmonic coefficients flm with spin-weight spin from real-valued grid point values f. L = lmax+1 is the number of modes in flm.\n\nThe arrays flm and f must have the following sizes:\n\nnphi = SSHT.sampling_dh_nphi(L)\nntheta = SSHT.sampling_dh_ntheta(L)\nlength(flm) == L^2\nsize(f) == (nphi, ntheta)\n\nUse SSTH.sampling_elm2ind to access individual modes in the flm array.\n\nSee the SSHT reference for details.\n\nSee also: SSHT.core_dh_forward_sov_real, SSHT.core_dh_forward_sov!, SSHT.core_dh_inverse_sov_real!.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.core_dh_forward_sov_real","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.core_dh_forward_sov_real","text":"flm = SSHT.core_dh_inverse_sov_real(f::AbstractVector{Float64},\n                                    L::Integer,\n                                    spin::Integer,\n                                    verbosity::Integer=0)\nf::Array{Complex{Float64},2}\n\nCalculate spin-weighted spherical harmonic coefficients flm with spin-weight spin from real-valued grid point values f. L = lmax+1 is the number of modes in flm.\n\nThe array flm must have the length L^2. The result f will have the following size:\n\nnphi = SSHT.sampling_dh_nphi(L)\nntheta = SSHT.sampling_dh_ntheta(L)\nsize(f) == (nphi, ntheta)\n\nUse SSTH.sampling_elm2ind to access individual modes in the flm array.\n\nSee the SSHT reference for details.\n\nSee also: SSHT.core_dh_forward_sov_real!, SSHT.core_dh_forward_sov, SSHT.core_dh_inverse_sov_real.\n\n\n\n\n\n","category":"function"},{"location":"#Derivatives-ð-(eth)-and-ð-(eth-bar)","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"Derivatives ð (eth) and ð̄ (eth-bar)","text":"","category":"section"},{"location":"","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.jl: Fast and exact spin spherical harmonic transforms","text":"See Wikipedia for the definition of these operators.","category":"page"},{"location":"","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.jl: Fast and exact spin spherical harmonic transforms","text":"SSHT.eth!\nSSHT.eth\nSSHT.ethbar!\nSSHT.ethbar","category":"page"},{"location":"#SSHT.eth!","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.eth!","text":"eth!(ðflm::AbstractVector, flm::AbstractVector, L::Integer, spin::Integer)\n\nCalculate the ð (eth) derivative of the spin-weighted spherical harmonic coefficients flm with spin weight s. L = lmax+1 is the number of modes in flm. The result has spin weight s+1.\n\nThe arrays ðflm and flm must have length L^2.\n\nSee Wikipedia for a definition of the ð (eth) operator.\n\nSee also: SSHT.eth, SSHT.ethbar!, SSHT.core_dh_transform_sov!, SSHT.core_dh_inverse_sov!.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.eth","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.eth","text":"ðflm = eth(flm::AbstractVector, L::Integer, spin::Integer)\nðflm::AbstractVector\n\nCalculate the ð (eth) derivative of the spin-weighted spherical harmonic coefficients flm with spin weight s. L = lmax+1 is the number of modes in flm. The result has spin weight s+1.\n\nThe array flm must have length L^2. The result ðflm will also have length L^2.\n\nSee Wikipedia for a definition of the ð (eth) operator.\n\nSee also: SSHT.eth, SSHT.ethbar!, SSHT.core_dh_transform_sov!, SSHT.core_dh_inverse_sov!.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.ethbar!","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.ethbar!","text":"ethbar!(ð̄flm::AbstractVector, flm::AbstractVector, L::Integer, spin::Integer)\n\nCalculate the ð̄ (eth-bar) derivative of the spin-weighted spherical harmonic coefficients flm with spin weight s. L = lmax+1 is the number of modes in flm. The result has spin weight s-1.\n\nThe arrays ð̄flm and flm must have length L^2.\n\nSee Wikipedia for a definition of the ð̄ (eth-bar) operator.\n\nSee also: SSHT.ethbar, SSHT.eth!, SSHT.core_dh_transform_sov!, SSHT.core_dh_inverse_sov!.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.ethbar","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.ethbar","text":"ð̄flm = ethbar(flm::AbstractVector, L::Integer, spin::Integer)\nð̄flm::AbstractVector\n\nCalculate the ð̄ (eth) derivative of the spin-weighted spherical harmonic coefficients flm with spin weight s. L = lmax+1 is the number of modes in flm. The result has spin weight s-1.\n\nThe array flm must have length L^2. The result ð̄flm will also have length L^2.\n\nSee Wikipedia for a definition of the ð (eth) operator.\n\nSee also: SSHT.ethbar, SSHT.eth!, SSHT.core_dh_transform_sov!, SSHT.core_dh_inverse_sov!.\n\n\n\n\n\n","category":"function"},{"location":"#Helper-functions","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"Helper functions","text":"","category":"section"},{"location":"","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.jl: Fast and exact spin spherical harmonic transforms","text":"SSHT.sampling_dh_n\nSSHT.sampling_dh_nphi\nSSHT.sampling_dh_ntheta\nSSHT.sampling_dh_p2phi\nSSHT.sampling_dh_t2theta\nSSHT.sampling_weight_dh\nSSHT.sampling_elm2ind\nSSHT.sampling_ind2elm","category":"page"},{"location":"#SSHT.sampling_dh_n","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.sampling_dh_n","text":"n = sampling_dh_n(L::Integer)\nn::Int\n\nTotal number of unique collocation points for L = lmax+1 modes that. (If the collocation scheme places points onto the poles, then not all collocation points are unique.)\n\nSee also: SSHT.sampling_dh_nphi, SSHT.sampling_dh_ntheta.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.sampling_dh_nphi","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.sampling_dh_nphi","text":"nphi = sampling_dh_nphi(L::Integer)\nnphi::Int\n\nNumber of collocation points in the phi direction for L = lmax+1 modes.\n\nSee also: SSHT.sampling_dh_n, SSHT.sampling_dh_ntheta.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.sampling_dh_ntheta","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.sampling_dh_ntheta","text":"ntheta = sampling_dh_ntheta(L::Integer)\nntheta::Int\n\nNumber of collocation points in the theta direction for L = lmax+1 modes.\n\nSee also: SSHT.sampling_dh_n, SSHT.sampling_dh_nphi.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.sampling_dh_p2phi","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.sampling_dh_p2phi","text":"phi = sampling_dh_p2phi(p::Integer, L::Integer)\nphi::Float64\n\nCalculate the phi coordinate for point p in the phi direction (1 ≤ p ≤ nphi).\n\nSee also: SSHT.sampling_dh_t2theta, SSHT.sampling_dh_nphi.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.sampling_dh_t2theta","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.sampling_dh_t2theta","text":"theta = sampling_dh_p2theta(t::Integer, L::Integer)\ntheta::Float64\n\nCalculate the theta coordinate for point t in the theta direction (1 ≤ t ≤ ntheta).\n\nSee also: SSHT.sampling_dh_p2phi, SSHT.sampling_dh_ntheta.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.sampling_weight_dh","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.sampling_weight_dh","text":"w = sampling_weight_dh(theta_t::Real, L::Integer)\nw::Float64\n\nCalculate the sampling weight of a point with the given theta coordinate. This value is essentially sin(theta) * dtheta, possibly modified to achive higher accuracy depending on how the collocation points are spaced out in the theta direction.\n\nIntegrating a function over the sphere should be done as follows:\n\n# Input: Choose `L` and array `f`\ns = 0.0\nnphi = SSHT.sampling_dh_nphi(L)\nntheta = SSHT.sampling_dh_ntheta(L)\nfor p in 1:nphi, t in 1:ntheta\n    phi = SSHT.sampling_dh_p2phi(p, L)\n    theta = SSHT.sampling_dh_t2theta(t, L)\n    # dtheta = π / ntheta\n    dtheta = SSHT.sampling_weight_dh(theta, L)\n    dphi = 2π / nphi\n    s += f[p, t] * dtheta * dphi\nend\n# Output: s\n\nSee also: SSHT.sampling_dh_nphi, SSHT.sampling_dh_ntheta, SSHT.sampling_dh_p2phi, SSHT.sampling_dh_t2theta.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.sampling_elm2ind","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.sampling_elm2ind","text":"ind = sampling_elm2ind(el::Integer, m::Integer)\nind::Int\n\nCalculate the mode array index ind for a given mode l, m. For L = lmax+1 modes, there are L^2 modes in total.\n\nSee also: sampling_ind2elm.\n\n\n\n\n\n","category":"function"},{"location":"#SSHT.sampling_ind2elm","page":"SSHT.jl: Fast and exact spin spherical harmonic transforms","title":"SSHT.sampling_ind2elm","text":"l, m = sampling_ind2elm(ind::Integer)\nl::Int\nm::Int\n\nCalculate the mode numbers l and m from a given mode array index ind. For L = lmax+1 modes, there are L^2 modes in total: 1 ≤ ind ≤ L^2.\n\nThis function needs to evaluate a square root internally. If possible, using sampling_elm2ind instead is slightly preferred.\n\nSee also: sampling_elm2ind.\n\n\n\n\n\n","category":"function"}]
}
